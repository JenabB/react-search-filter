{"version":3,"sources":["info-json.js","App.js","serviceWorker.js","index.js"],"names":["Information","image","name","price","stock","category","subcategory","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchSpace","event","keyword","target","value","setState","search","state","_this2","items","filter","data","toLowerCase","includes","map","react_default","a","createElement","className","src","alt","style","fontSize","type","placeholder","onChange","e","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAyEeA,SAzEK,CAClB,CACEC,MACE,2EACFC,KAAM,SACNC,MAAO,IACPC,MAAO,GACPC,SAAU,OACVC,YAAa,aAEf,CACEL,MACE,sGACFC,KAAM,MACNC,MAAO,IACPC,MAAO,GACPC,SAAU,OACVC,YAAa,aAEf,CACEL,MACE,+HACFC,KAAM,UACNC,MAAO,IACPC,MAAO,EACPC,SAAU,aACVC,YAAa,SAEf,CACEL,MAAO,gEACPC,KAAM,WACNC,MAAO,IACPC,MAAO,EACPC,SAAU,QACVC,YAAa,UAEf,CACEL,MAAO,gEACPC,KAAM,eACNC,MAAO,IACPC,MAAO,EACPC,SAAU,QACVC,YAAa,UAEf,CACEL,MACE,kIACFC,KAAM,cACNC,MAAO,IACPC,MAAO,EACPC,SAAU,QACVC,YAAa,UAEf,CACEL,MACE,iJACFC,KAAM,cACNC,MAAO,IACPC,MAAO,EACPC,SAAU,WACVC,YAAa,SAEf,CACEL,MACE,2EACFC,KAAM,wBACNC,MAAO,IACPC,MAAO,EACPC,SAAU,aACVC,YAAa,WCJFC,cA5Db,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAOFI,YAAc,SAACC,GACb,IAAIC,EAAUD,EAAME,OAAOC,MAC3BX,EAAKY,SAAS,CAAEC,OAAQJ,KAPxBT,EAAKc,MAAQ,CACXD,OAAQ,MAJEb,wEAaL,IAAAe,EAAAZ,KACDa,EAAQxB,EAAYyB,OAAO,SAACC,GAChC,OAAyB,MAArBH,EAAKD,MAAMD,OAAuBK,EAEpCA,EAAKxB,KAAKyB,cAAcC,SAASL,EAAKD,MAAMD,OAAOM,gBACnDD,EAAKrB,SAASsB,cAAcC,SAASL,EAAKD,MAAMD,OAAOM,gBACvDD,EAAKpB,YAAYqB,cAAcC,SAASL,EAAKD,MAAMD,OAAOM,eAEnDD,OALJ,IAOJG,IAAI,SAACH,GACN,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,gBACVC,IAAKR,EAAKzB,MACVkC,IAAI,iBAENL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAKN,EAAKxB,MACV4B,EAAAC,EAAAC,cAAA,UAAKN,EAAKvB,OACV2B,EAAAC,EAAAC,cAAA,KAAGI,MAAO,CAAEC,SAAU,SAAtB,UAAwCX,EAAKtB,OAC7C0B,EAAAC,EAAAC,cAAA,UAAKN,EAAKrB,eAOpB,OACEyB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLC,YAAY,4BACZC,SAAU,SAACC,GAAD,OAAOlB,EAAKR,YAAY0B,MAEpCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYT,aArDrBkB,aCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.931284da.chunk.js","sourcesContent":["const Information = [\n  {\n    image:\n      \"https://images-na.ssl-images-amazon.com/images/I/81HdszfPvNL._SX466_.jpg\",\n    name: \"Nutela\",\n    price: 3000,\n    stock: 21,\n    category: \"Food\",\n    subcategory: \"Chocolate\",\n  },\n  {\n    image:\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0b1N7WT8Bh7tXD9PN7KvK7fgNknvg9XxUbQ&usqp=CAU\",\n    name: \"M&M\",\n    price: 3000,\n    stock: 11,\n    category: \"Food\",\n    subcategory: \"Chocolate\",\n  },\n  {\n    image:\n      \"https://ecs7.tokopedia.net/img/cache/700/product-1/2020/1/9/82335368/82335368_2c0491c1-784e-47ba-ae0d-d1847ee81cf3_1000_1000\",\n    name: \"TSR-909\",\n    price: 3000,\n    stock: 7,\n    category: \"Electronic\",\n    subcategory: \"Radio\",\n  },\n  {\n    image: \"https://cf.shopee.co.id/file/541d21ff38701a3aabf5aed15de56158\",\n    name: \"Monstera\",\n    price: 3000,\n    stock: 7,\n    category: \"Plant\",\n    subcategory: \"Keladi\",\n  },\n  {\n    image: \"https://cf.shopee.co.id/file/a3ac64581ba4aa18e2e5e03b9f51d8d0\",\n    name: \"Sirih Gading\",\n    price: 3000,\n    stock: 7,\n    category: \"Plant\",\n    subcategory: \"Keladi\",\n  },\n  {\n    image:\n      \"https://ecs7.tokopedia.net/img/cache/700/product-1/2018/7/29/26564976/26564976_01c12514-cac9-4772-910c-f8ee9a603b6f_700_700.jpg\",\n    name: \"Lidah Buaya\",\n    price: 3000,\n    stock: 7,\n    category: \"Plant\",\n    subcategory: \"Keladi\",\n  },\n  {\n    image:\n      \"https://www.static-src.com/wcsstore/Indraprastha/images/catalog/full//89/MTA-3812372/houze-living_houze-living-harrison-kursi-rotan_full02.jpg\",\n    name: \"Kursi Rotan\",\n    price: 3000,\n    stock: 7,\n    category: \"Furnitur\",\n    subcategory: \"Kursi\",\n  },\n  {\n    image:\n      \"https://www.digitalalliance.co.id/wp-content/uploads/2019/05/LUNA_03.jpg\",\n    name: \"Digital Alliance Luna\",\n    price: 3000,\n    stock: 7,\n    category: \"Electronic\",\n    subcategory: \"Mouse\",\n  },\n];\n\nexport default Information;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Information from \"./info-json\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search: null,\n    };\n  }\n\n  searchSpace = (event) => {\n    let keyword = event.target.value;\n    this.setState({ search: keyword });\n  };\n\n  render() {\n    const items = Information.filter((data) => {\n      if (this.state.search == null) return data;\n      else if (\n        data.name.toLowerCase().includes(this.state.search.toLowerCase()) ||\n        data.category.toLowerCase().includes(this.state.search.toLowerCase()) ||\n        data.subcategory.toLowerCase().includes(this.state.search.toLowerCase())\n      ) {\n        return data;\n      }\n    }).map((data) => {\n      return (\n        <div>\n          <div className=\"item-container\">\n            <img\n              className=\"product-image\"\n              src={data.image}\n              alt=\"productimage\"\n            />\n            <div className=\"item-description\">\n              <h3>{data.name}</h3>\n              <h5>{data.price}</h5>\n              <p style={{ fontSize: \"10pt\" }}>stock: {data.stock}</p>\n              <h6>{data.category}</h6>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"app-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter item to be searched\"\n            onChange={(e) => this.searchSpace(e)}\n          />\n          <div className=\"app-body\">\n            <div className=\"app-item\">{items}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}